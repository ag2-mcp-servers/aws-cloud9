# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T09:56:47+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, conint, constr


class AutomaticStopTimeMinutes(RootModel[conint(ge=0, le=20160)]):
    root: conint(ge=0, le=20160)


class BadRequestException(RootModel[Any]):
    root: Any


class ClientRequestToken(RootModel[constr(pattern=r'[\x20-\x7E]{10,128}')]):
    root: constr(pattern=r'[\x20-\x7E]{10,128}')


class ConcurrentAccessException(RootModel[Any]):
    root: Any


class ConflictException(RootModel[Any]):
    root: Any


class ConnectionType(Enum):
    CONNECT_SSH = 'CONNECT_SSH'
    CONNECT_SSM = 'CONNECT_SSM'


class DeleteEnvironmentMembershipResult(BaseModel):
    pass


class DeleteEnvironmentResult(BaseModel):
    pass


class EnvironmentArn(
    RootModel[
        constr(
            pattern=r'arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):cloud9:([a-z]{2}-[a-z]+-\d{1}):[0-9]{12}:environment:[a-zA-Z0-9]{8,32}'
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):cloud9:([a-z]{2}-[a-z]+-\d{1}):[0-9]{12}:environment:[a-zA-Z0-9]{8,32}'
    )


class EnvironmentDescription(RootModel[SecretStr]):
    root: SecretStr


class EnvironmentId(RootModel[constr(pattern=r'^[a-zA-Z0-9]{8,32}$')]):
    root: constr(pattern=r'^[a-zA-Z0-9]{8,32}$')


class EnvironmentIdList(RootModel[List[EnvironmentId]]):
    root: List[EnvironmentId]


class EnvironmentLifecycleStatus(Enum):
    CREATING = 'CREATING'
    CREATED = 'CREATED'
    CREATE_FAILED = 'CREATE_FAILED'
    DELETING = 'DELETING'
    DELETE_FAILED = 'DELETE_FAILED'


class EnvironmentName(RootModel[constr(min_length=1, max_length=60)]):
    root: constr(min_length=1, max_length=60)


class EnvironmentStatus(Enum):
    error = 'error'
    creating = 'creating'
    connecting = 'connecting'
    ready = 'ready'
    stopping = 'stopping'
    stopped = 'stopped'
    deleting = 'deleting'


class EnvironmentType(Enum):
    ssh = 'ssh'
    ec2 = 'ec2'


class ForbiddenException(RootModel[Any]):
    root: Any


class ImageId(RootModel[constr(max_length=512)]):
    root: constr(max_length=512)


class InstanceType(
    RootModel[constr(pattern=r'^[a-z][1-9][.][a-z0-9]+$', min_length=5, max_length=20)]
):
    root: constr(pattern=r'^[a-z][1-9][.][a-z0-9]+$', min_length=5, max_length=20)


class InternalServerErrorException(RootModel[Any]):
    root: Any


class LimitExceededException(RootModel[Any]):
    root: Any


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: EnvironmentArn


class ManagedCredentialsAction(Enum):
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'


class ManagedCredentialsStatus(Enum):
    ENABLED_ON_CREATE = 'ENABLED_ON_CREATE'
    ENABLED_BY_OWNER = 'ENABLED_BY_OWNER'
    DISABLED_BY_DEFAULT = 'DISABLED_BY_DEFAULT'
    DISABLED_BY_OWNER = 'DISABLED_BY_OWNER'
    DISABLED_BY_COLLABORATOR = 'DISABLED_BY_COLLABORATOR'
    PENDING_REMOVAL_BY_COLLABORATOR = 'PENDING_REMOVAL_BY_COLLABORATOR'
    PENDING_START_REMOVAL_BY_COLLABORATOR = 'PENDING_START_REMOVAL_BY_COLLABORATOR'
    PENDING_REMOVAL_BY_OWNER = 'PENDING_REMOVAL_BY_OWNER'
    PENDING_START_REMOVAL_BY_OWNER = 'PENDING_START_REMOVAL_BY_OWNER'
    FAILED_REMOVAL_BY_COLLABORATOR = 'FAILED_REMOVAL_BY_COLLABORATOR'
    FAILED_REMOVAL_BY_OWNER = 'FAILED_REMOVAL_BY_OWNER'


class MaxResults(RootModel[conint(ge=0, le=25)]):
    root: conint(ge=0, le=25)


class MemberPermissions(Enum):
    read_write = 'read-write'
    read_only = 'read-only'


class NotFoundException(RootModel[Any]):
    root: Any


class NullableBoolean(RootModel[bool]):
    root: bool


class Permissions(Enum):
    owner = 'owner'
    read_write = 'read-write'
    read_only = 'read-only'


class PermissionsList(RootModel[List[Permissions]]):
    root: List[Permissions]


class String(RootModel[str]):
    root: str


class SubnetId(
    RootModel[
        constr(
            pattern=r'^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$',
            min_length=15,
            max_length=24,
        )
    ]
):
    root: constr(
        pattern=r'^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$',
        min_length=15,
        max_length=24,
    )


class TagKey(RootModel[SecretStr]):
    root: SecretStr


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=200, min_length=0)


class TagResourceResponse(BaseModel):
    pass


class TagValue(RootModel[SecretStr]):
    root: SecretStr


class Timestamp(RootModel[datetime]):
    root: datetime


class TooManyRequestsException(RootModel[Any]):
    root: Any


class UntagResourceRequest(BaseModel):
    ResourceARN: EnvironmentArn
    TagKeys: TagKeyList


class UntagResourceResponse(BaseModel):
    pass


class UpdateEnvironmentRequest(BaseModel):
    description: Optional[EnvironmentDescription] = None
    environmentId: EnvironmentId
    managedCredentialsAction: Optional[ManagedCredentialsAction] = None
    name: Optional[EnvironmentName] = None


class UpdateEnvironmentResult(BaseModel):
    pass


class UserArn(
    RootModel[
        constr(
            pattern=r'^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(iam|sts)::\d+:(root|(user\/[\w+=/:,.@-]{1,64}|federated-user\/[\w+=/:,.@-]{2,32}|assumed-role\/[\w+=:,.@-]{1,64}\/[\w+=,.@-]{1,64}))$'
        )
    ]
):
    root: constr(
        pattern=r'^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(iam|sts)::\d+:(root|(user\/[\w+=/:,.@-]{1,64}|federated-user\/[\w+=/:,.@-]{2,32}|assumed-role\/[\w+=:,.@-]{1,64}\/[\w+=,.@-]{1,64}))$'
    )


class XAmzTarget(Enum):
    AWSCloud9WorkspaceManagementService_CreateEnvironmentEC2 = (
        'AWSCloud9WorkspaceManagementService.CreateEnvironmentEC2'
    )


class XAmzTarget1(Enum):
    AWSCloud9WorkspaceManagementService_CreateEnvironmentMembership = (
        'AWSCloud9WorkspaceManagementService.CreateEnvironmentMembership'
    )


class XAmzTarget2(Enum):
    AWSCloud9WorkspaceManagementService_DeleteEnvironment = (
        'AWSCloud9WorkspaceManagementService.DeleteEnvironment'
    )


class XAmzTarget3(Enum):
    AWSCloud9WorkspaceManagementService_DeleteEnvironmentMembership = (
        'AWSCloud9WorkspaceManagementService.DeleteEnvironmentMembership'
    )


class XAmzTarget4(Enum):
    AWSCloud9WorkspaceManagementService_DescribeEnvironmentMemberships = (
        'AWSCloud9WorkspaceManagementService.DescribeEnvironmentMemberships'
    )


class XAmzTarget5(Enum):
    AWSCloud9WorkspaceManagementService_DescribeEnvironmentStatus = (
        'AWSCloud9WorkspaceManagementService.DescribeEnvironmentStatus'
    )


class XAmzTarget6(Enum):
    AWSCloud9WorkspaceManagementService_DescribeEnvironments = (
        'AWSCloud9WorkspaceManagementService.DescribeEnvironments'
    )


class XAmzTarget7(Enum):
    AWSCloud9WorkspaceManagementService_ListEnvironments = (
        'AWSCloud9WorkspaceManagementService.ListEnvironments'
    )


class XAmzTarget8(Enum):
    AWSCloud9WorkspaceManagementService_ListTagsForResource = (
        'AWSCloud9WorkspaceManagementService.ListTagsForResource'
    )


class XAmzTarget9(Enum):
    AWSCloud9WorkspaceManagementService_TagResource = (
        'AWSCloud9WorkspaceManagementService.TagResource'
    )


class XAmzTarget10(Enum):
    AWSCloud9WorkspaceManagementService_UntagResource = (
        'AWSCloud9WorkspaceManagementService.UntagResource'
    )


class XAmzTarget11(Enum):
    AWSCloud9WorkspaceManagementService_UpdateEnvironment = (
        'AWSCloud9WorkspaceManagementService.UpdateEnvironment'
    )


class XAmzTarget12(Enum):
    AWSCloud9WorkspaceManagementService_UpdateEnvironmentMembership = (
        'AWSCloud9WorkspaceManagementService.UpdateEnvironmentMembership'
    )


class BoundedEnvironmentIdList(RootModel[List[EnvironmentId]]):
    root: List[EnvironmentId] = Field(..., max_length=25, min_length=1)


class CreateEnvironmentEC2Result(BaseModel):
    environmentId: Optional[EnvironmentId] = None


class CreateEnvironmentMembershipRequest(BaseModel):
    environmentId: EnvironmentId
    permissions: MemberPermissions
    userArn: UserArn


class DeleteEnvironmentMembershipRequest(BaseModel):
    environmentId: EnvironmentId
    userArn: UserArn


class DeleteEnvironmentRequest(BaseModel):
    environmentId: EnvironmentId


class DescribeEnvironmentMembershipsRequest(BaseModel):
    environmentId: Optional[EnvironmentId] = None
    maxResults: Optional[MaxResults] = None
    nextToken: Optional[String] = None
    permissions: Optional[PermissionsList] = None
    userArn: Optional[UserArn] = None


class DescribeEnvironmentStatusRequest(BaseModel):
    environmentId: EnvironmentId


class DescribeEnvironmentStatusResult(BaseModel):
    message: String
    status: EnvironmentStatus


class DescribeEnvironmentsRequest(BaseModel):
    environmentIds: BoundedEnvironmentIdList


class EnvironmentLifecycle(BaseModel):
    failureResource: Optional[String] = None
    reason: Optional[String] = None
    status: Optional[EnvironmentLifecycleStatus] = None


class EnvironmentMember(BaseModel):
    environmentId: EnvironmentId
    lastAccess: Optional[Timestamp] = None
    permissions: Permissions
    userArn: UserArn
    userId: String


class EnvironmentMembersList(RootModel[List[EnvironmentMember]]):
    root: List[EnvironmentMember]


class ListEnvironmentsRequest(BaseModel):
    maxResults: Optional[MaxResults] = None
    nextToken: Optional[String] = None


class ListEnvironmentsResult(BaseModel):
    environmentIds: Optional[EnvironmentIdList] = None
    nextToken: Optional[String] = None


class Tag(BaseModel):
    Key: TagKey
    Value: TagValue


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=200, min_length=0)


class TagResourceRequest(BaseModel):
    ResourceARN: EnvironmentArn
    Tags: TagList


class UpdateEnvironmentMembershipRequest(BaseModel):
    environmentId: EnvironmentId
    permissions: MemberPermissions
    userArn: UserArn


class UpdateEnvironmentMembershipResult(BaseModel):
    membership: Optional[EnvironmentMember] = None


class CreateEnvironmentEC2Request(BaseModel):
    automaticStopTimeMinutes: Optional[AutomaticStopTimeMinutes] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    connectionType: Optional[ConnectionType] = None
    description: Optional[EnvironmentDescription] = None
    dryRun: Optional[NullableBoolean] = None
    imageId: Optional[ImageId] = None
    instanceType: InstanceType
    name: EnvironmentName
    ownerArn: Optional[UserArn] = None
    subnetId: Optional[SubnetId] = None
    tags: Optional[TagList] = None


class CreateEnvironmentMembershipResult(BaseModel):
    membership: EnvironmentMember


class DescribeEnvironmentMembershipsResult(BaseModel):
    memberships: Optional[EnvironmentMembersList] = None
    nextToken: Optional[String] = None


class Environment(BaseModel):
    arn: String
    connectionType: Optional[ConnectionType] = None
    description: Optional[EnvironmentDescription] = None
    id: Optional[EnvironmentId] = None
    lifecycle: Optional[EnvironmentLifecycle] = None
    managedCredentialsStatus: Optional[ManagedCredentialsStatus] = None
    name: Optional[EnvironmentName] = None
    ownerArn: String
    type: EnvironmentType


class EnvironmentList(RootModel[List[Environment]]):
    root: List[Environment]


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class DescribeEnvironmentsResult(BaseModel):
    environments: Optional[EnvironmentList] = None
